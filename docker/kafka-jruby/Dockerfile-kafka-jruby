# Build Docker image based on jRuby with both zookeeper and kafka
# for usage as default image for whole CI pipeline for TriXX
# Peter Ramm, 2020-03-17

# Usage:
# Build image:      > docker build -f Dockerfile-kafka-jruby --no-cache -t git.osp-dd.de:5005/main/trixx/kafka-jruby .
# Run container:    > docker run  git.osp-dd.de:5005/main/trixx/kafka-jruby
# Use

FROM jruby:9.2.8.0

MAINTAINER Peter.Ramm@ottogroup.com

ARG KAFKA_VERSION=2.4.0
ARG SCALA_VERSION=2.12

#EXPOSE 2181/tcp 9092/tcp

RUN  apt-get update && \
     apt-get install -y procps && \
     wget "http://us.mirrors.quenda.co/apache/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz" -O /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && \
     cd /opt && tar xvf /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && rm /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && \
     ln -s kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka && \
     sed -i 's|^log.dirs=.*$|log.dirs=/var/lib/kafka|' /opt/kafka/config/server.properties

# Without own volume for ontime usage in CI pipeline
#VOLUME /var/lib/kafka

COPY    run-kafka-jruby.sh start-kafka.sh /opt/

# use bracket syntax to ensure run-kafka-jruby.sh runs with PID 1 and receives SIGTERM signal
CMD ["/opt/run-kafka-jruby.sh"]
