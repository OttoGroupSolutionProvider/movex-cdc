# Build Docker image based on jRuby with both zookeeper and kafka
# for usage as default image for whole CI pipeline for TriXX
# Peter Ramm, 2021-03-02

# Usage:
# Build image:      > docker build -f Dockerfile-kafka-jruby-oracle --no-cache -t git.osp-dd.de:5005/main/trixx/kafka-jruby:9.2.16.0-jdk11 .

FROM oraclelinux:8-slim

MAINTAINER Peter.Ramm@ottogroup.com
ARG JRUBY_VERSION=9.2.16.0
ARG KAFKA_VERSION=2.7.0
ARG SCALA_VERSION=2.13
ENV JRUBY_VERSION=$JRUBY_VERSION
ENV KAFKA_VERSION=$KAFKA_VERSION
ENV SCALA_VERSION=$SCALA_VERSION
ENV KAFKA_HOME=/opt/kafka
ENV PATH "$PATH:/opt/jruby-$JRUBY_VERSION/bin"

#EXPOSE 2181/tcp 9092/tcp

# RUN-Steps:
# - update system
# - install tools
# - install podman
# - install Kafka
RUN  microdnf update && \
     microdnf install procps wget tar gzip vim java-11-openjdk.x86_64 util-linux podman jq bc && \
     wget "https://mirror.softaculous.com/apache/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz" -O /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && \
     cd /opt && tar xvf /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && rm /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && \
     ln -s kafka_${SCALA_VERSION}-${KAFKA_VERSION} ${KAFKA_HOME} && \
     sed -i 's|^log.dirs=.*$|log.dirs=/var/lib/kafka|' /opt/kafka/config/server.properties && \
     cd /opt && wget https://repo1.maven.org/maven2/org/jruby/jruby-dist/$JRUBY_VERSION/jruby-dist-$JRUBY_VERSION-bin.tar.gz && \
     cd /opt && tar -xvf jruby-dist-$JRUBY_VERSION-bin.tar.gz && rm jruby-dist-$JRUBY_VERSION-bin.tar.gz && \
     ln -s /opt/jruby-$JRUBY_VERSION/bin/jruby /opt/jruby-$JRUBY_VERSION/bin/ruby && \
     ruby -v && \
     echo 'Europe/Berlin' > /etc/timezone && rm -f /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime && \
     date && \
     gem install --no-doc bundler && \
     echo "gem: --no-rdoc --no-ri" > ~/.gemrc

# Without own volume for ontime usage in CI pipeline
#VOLUME /var/lib/kafka

COPY    run-kafka-jruby.sh start-kafka.sh /opt/

# use bracket syntax to ensure run-kafka-jruby.sh runs with PID 1 and receives SIGTERM signal
CMD ["/opt/run-kafka-jruby.sh"]
