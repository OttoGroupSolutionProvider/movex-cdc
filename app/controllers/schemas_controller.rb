# generated by: rails generate scaffold_controller Schema
class SchemasController < ApplicationController
  before_action :set_schema, only: [:show, :update, :destroy]

  # GET /schemas
  # List schemas the current user is allowed for
  def index
    @schemas = Schema.includes(:schema_rights).where(schema_rights: { user_id: @current_user.id})
    render json: @schemas
  end

  # GET /schemas/1
  def show
    render json: @schema
  end

  # POST /schemas
  def create
    @schema = Schema.new(schema_params)

    if @schema.save
      log_activity(
          schema_name:  @schema.name,
          action:       "schema inserted: #{@schema.attributes}"
      )
      render json: @schema, status: :created, location: @schema
    else
      render json: { errors: @schema.errors.full_messages }, status: :unprocessable_entity
    end
  end

  # PATCH/PUT /schemas/1
  def update
    if @schema.update(schema_params)
      log_activity(
          schema_name:  @schema.name,
          action:       "schema updated: #{@schema.attributes}"
      )
      render json: @schema
    else
      render json: { errors: @schema.errors.full_messages }, status: :unprocessable_entity
    end
  end

  # DELETE /schemas/1
  def destroy
    @schema.destroy
    log_activity(
        schema_name:  @schema.name,
        action:       "schema deleted: #{@schema.attributes}"
    )
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_schema
      @schema = Schema.find(params[:id])
    end

    # Only allow a trusted parameter "white list" through.
    def schema_params
      params.fetch(:schema, {}).permit(:name, :topic, :lock_version)
    end
end
